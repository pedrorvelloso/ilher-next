{
  "version": 3,
  "sources": ["<stdin>", "../node_modules/@remix-run/dev/compiler/shims/react.ts", "../app/entry.server.tsx", "route-module:/home/pedro/Documents/portfolio/ilher.dev/app/root.tsx", "../app/components/navbar.tsx", "../app/providers/theme-provider.tsx", "../app/components/anchor.tsx", "../app/components/layout.tsx", "../app/sessions/theme.server.ts", "route-module:/home/pedro/Documents/portfolio/ilher.dev/app/routes/actions/theme.tsx", "route-module:/home/pedro/Documents/portfolio/ilher.dev/app/routes/index.tsx"],
  "sourcesContent": ["\nimport * as entryServer from \"/home/pedro/Documents/portfolio/ilher.dev/app/entry.server.tsx\";\nimport * as route0 from \"/home/pedro/Documents/portfolio/ilher.dev/app/root.tsx\";\nimport * as route1 from \"/home/pedro/Documents/portfolio/ilher.dev/app/routes/actions/theme.tsx\";\nimport * as route2 from \"/home/pedro/Documents/portfolio/ilher.dev/app/routes/index.tsx\";\nexport { default as assets } from \"./assets.json\";\nexport const entry = { module: entryServer };\nexport const routes = {\n  \"root\": {\n    id: \"root\",\n    parentId: undefined,\n    path: \"\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route0\n  },\n  \"routes/actions/theme\": {\n    id: \"routes/actions/theme\",\n    parentId: \"root\",\n    path: \"actions/theme\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route1\n  },\n  \"routes/index\": {\n    id: \"routes/index\",\n    parentId: \"root\",\n    path: undefined,\n    index: true,\n    caseSensitive: undefined,\n    module: route2\n  }\n};", "import * as React from \"react\";\nexport { React };\n", "import { renderToString } from 'react-dom/server'\nimport { RemixServer } from 'remix'\nimport type { EntryContext } from 'remix'\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext,\n) {\n  const markup = renderToString(\n    <RemixServer context={remixContext} url={request.url} />,\n  )\n\n  responseHeaders.set('Content-Type', 'text/html')\n\n  return new Response(`<!DOCTYPE html>${markup}`, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  })\n}\n", "import * as React from 'react'\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n  useCatch,\n  useLocation,\n  useLoaderData,\n} from 'remix'\nimport type { LinksFunction, LoaderFunction } from 'remix'\n\nimport tailwindStyles from './styles/tailwind.css'\nimport appStyles from './styles/app.css'\nimport noScriptStyles from './styles/no-script.css'\n\nimport { Layout } from './components/layout'\n\nimport { getThemeSession } from './sessions/theme.server'\nimport { Theme, ThemeProvider, useTheme } from './providers/theme-provider'\n\nexport const links: LinksFunction = () => {\n  return [\n    {\n      rel: 'stylesheet',\n      href: 'https://fonts.googleapis.com/css2?family=Nunito:wght@400;600;700&display=swap',\n    },\n    {\n      rel: 'stylesheet',\n      href: 'https://fonts.googleapis.com/css2?family=JetBrains+Mono&display=swap',\n    },\n    { rel: 'stylesheet', href: tailwindStyles },\n    { rel: 'stylesheet', href: appStyles },\n  ]\n}\n\ntype RootLoaderData = {\n  theme: Theme\n}\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const themeSession = await getThemeSession(request)\n\n  return {\n    theme: themeSession.getTheme(),\n  }\n}\n\nexport default function App() {\n  const data = useLoaderData<RootLoaderData>()\n  return (\n    <ThemeProvider initialTheme={data.theme}>\n      <Document>\n        <Layout>\n          <Outlet />\n        </Layout>\n      </Document>\n    </ThemeProvider>\n  )\n}\n\nfunction Document({\n  children,\n  title,\n}: {\n  children: React.ReactNode\n  title?: string\n}) {\n  const { theme } = useTheme()\n\n  return (\n    <html lang=\"en\">\n      <head>\n        <meta charSet=\"utf-8\" />\n        <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\n        {title ? <title>{title}</title> : null}\n        <Meta />\n        <link\n          rel=\"preconnect\"\n          href=\"https://fonts.gstatic.com\"\n          crossOrigin=\"\"\n        />\n        <Links />\n        <noscript>\n          <link rel=\"stylesheet\" href={noScriptStyles} />\n        </noscript>\n      </head>\n      <body className={theme}>\n        {children}\n        <RouteChangeAnnouncement />\n        <ScrollRestoration />\n        <Scripts />\n        {process.env.NODE_ENV === 'development' && <LiveReload />}\n      </body>\n    </html>\n  )\n}\n\nexport function CatchBoundary() {\n  const caught = useCatch()\n\n  let message\n  switch (caught.status) {\n    case 401:\n      message = (\n        <p>\n          Oops! Looks like you tried to visit a page that you do not have access\n          to.\n        </p>\n      )\n      break\n    case 404:\n      message = (\n        <p>Oops! Looks like you tried to visit a page that does not exist.</p>\n      )\n      break\n\n    default:\n      throw new Error(caught.data || caught.statusText)\n  }\n\n  return (\n    <Document title={`${caught.status} ${caught.statusText}`}>\n      <h1>\n        {caught.status}: {caught.statusText}\n      </h1>\n      {message}\n    </Document>\n  )\n}\n\nexport function ErrorBoundary({ error }: { error: Error }) {\n  console.error(error)\n  return (\n    <Document title=\"Error!\">\n      <div>\n        <h1>There was an error</h1>\n        <p>{error.message}</p>\n        <hr />\n        <p>\n          Hey, developer, you should replace this with what you want your users\n          to see.\n        </p>\n      </div>\n    </Document>\n  )\n}\n\n/**\n * Provides an alert for screen reader users when the route changes.\n */\n// TODO edit\nconst RouteChangeAnnouncement = React.memo(() => {\n  const [hydrated, setHydrated] = React.useState(false)\n  const [innerHtml, setInnerHtml] = React.useState('')\n  const location = useLocation()\n\n  React.useEffect(() => {\n    setHydrated(true)\n  }, [])\n\n  const firstRenderRef = React.useRef(true)\n  React.useEffect(() => {\n    // Skip the first render because we don't want an announcement on the\n    // initial page load.\n    if (firstRenderRef.current) {\n      firstRenderRef.current = false\n      return\n    }\n\n    const pageTitle = location.pathname === '/' ? 'Home page' : document.title\n    setInnerHtml(`Navigated to ${pageTitle}`)\n  }, [location.pathname])\n\n  // Render nothing on the server. The live region provides no value unless\n  // scripts are loaded and the browser takes over normal routing.\n  if (!hydrated) {\n    return null\n  }\n\n  return (\n    <div\n      aria-live=\"assertive\"\n      aria-atomic\n      id=\"route-change-region\"\n      style={{\n        border: '0',\n        clipPath: 'inset(100%)',\n        clip: 'rect(0 0 0 0)',\n        height: '1px',\n        margin: '-1px',\n        overflow: 'hidden',\n        padding: '0',\n        position: 'absolute',\n        width: '1px',\n        whiteSpace: 'nowrap',\n        wordWrap: 'normal',\n      }}\n    >\n      {innerHtml}\n    </div>\n  )\n})\n", "import clsx from 'clsx'\nimport { FaMoon as MoonIcon, FaSun as SunIcon } from 'react-icons/fa'\n\nimport { useTheme } from '~/providers/theme-provider'\n\nimport Anchor from '~/components/anchor'\n\nconst ThemeChanger = () => {\n  const { theme, changeTheme } = useTheme()\n\n  return (\n    <button\n      type=\"button\"\n      onClick={() => {\n        changeTheme(theme === 'dark' ? 'light' : 'dark')\n      }}\n      className=\"inline-flex items-center justify-center h-14 focus:outline-none overflow-hidden transition\"\n    >\n      <div className=\"relative w-8 h-8\">\n        <span\n          className={clsx(\n            'absolute inset-0 text-black dark:text-white transform transition duration-500 flex justify-center items-center',\n            {\n              'opacity-0': theme === 'light',\n              'opacity-1': theme === 'dark',\n            },\n          )}\n        >\n          <MoonIcon size={28} />\n        </span>\n        <span\n          className={clsx(\n            'absolute inset-0 text-black dark:text-white transform transition duration-500 flex justify-center items-center',\n            {\n              'opacity-0': theme === 'dark',\n              'opacity-1': theme === 'light',\n            },\n          )}\n        >\n          <SunIcon size={28} />\n        </span>\n      </div>\n    </button>\n  )\n}\n\nexport const Navbar = () => {\n  return (\n    <div className=\"px-5vw py-4 lg:py-12\">\n      <nav className=\"text-black dark:text-white max-w-8xl flex justify-between items-center mx-auto\">\n        <Anchor\n          href=\"/\"\n          underline\n          className=\"dark:text-white text-2xl lg:text-4xl font-bold\"\n        >\n          Pedro Reis\n        </Anchor>\n        <div className=\"flex items-center\">\n          <div className=\"noscript-hidden\">\n            <ThemeChanger />\n          </div>\n          <span className=\"hidden ml-6 lg:block\">\n            <Anchor\n              external\n              underline={false}\n              href=\"mailto:pedro@ilher.dev\"\n              className=\"no-underline bg-accent text-white hover:bg-transparent hover:text-black dark:hover:bg-transparent dark:hover:text-white px-6 py-2 rounded-full text-md transition-colors\"\n            >\n              Let&apos;s chat\n            </Anchor>\n          </span>\n        </div>\n      </nav>\n    </div>\n  )\n}\n", "import {\n  createContext,\n  useCallback,\n  useContext,\n  useEffect,\n  useRef,\n  useState,\n} from 'react'\nimport { useFetcher } from 'remix'\n\nexport type Theme = 'dark' | 'light'\n\ninterface ThemeContextData {\n  theme: Theme\n  changeTheme(theme: Theme): void\n}\n\nconst ThemeContext = createContext<ThemeContextData | undefined>(undefined)\n\ninterface ThemeProviderProps {\n  initialTheme: Theme\n}\n\nexport const ThemeProvider: React.FC<ThemeProviderProps> = ({\n  initialTheme,\n  children,\n}) => {\n  const [theme, setTheme] = useState(initialTheme)\n  const changeTheme = useCallback((nextTheme: Theme) => setTheme(nextTheme), [])\n\n  const themeFetcher = useFetcher()\n  const themeFetcherRef = useRef(themeFetcher)\n\n  useEffect(() => {\n    themeFetcherRef.current = themeFetcher\n  }, [themeFetcher])\n\n  const firstMount = useRef(false)\n\n  useEffect(() => {\n    if (!firstMount.current) {\n      firstMount.current = true\n      return\n    }\n\n    if (!theme) return\n    themeFetcherRef.current.submit(\n      { theme },\n      { action: 'actions/theme', method: 'post' },\n    )\n  }, [theme])\n\n  return (\n    <ThemeContext.Provider value={{ theme, changeTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  )\n}\n\nexport const useTheme = () => {\n  const context = useContext(ThemeContext)\n\n  if (!context) throw new Error('useTheme must be used within ThemeProvider')\n\n  return context\n}\n", "import { Link } from 'remix'\nimport clsx from 'clsx'\n\nexport interface AnchorProps {\n  href: string\n  className?: string\n  underline?: boolean\n  external?: boolean\n}\n\nconst Anchor: React.FC<AnchorProps> = ({\n  href,\n  className,\n  children,\n  underline = true,\n  external = false,\n}) => {\n  if (external)\n    return (\n      <a\n        href={href}\n        className={clsx(className, { 'hover:underline': underline })}\n      >\n        {children}\n      </a>\n    )\n\n  return (\n    <Link\n      to={href}\n      className={clsx(className, { 'hover:underline': underline })}\n    >\n      {children}\n    </Link>\n  )\n}\n\nexport default Anchor\n", "import { Navbar } from '~/components/navbar'\n\nexport const Layout: React.FC = ({ children }) => {\n  return (\n    <div className=\"min-h-full\">\n      <Navbar />\n      {children}\n    </div>\n  )\n}\n", "import { createCookieSessionStorage } from 'remix'\n\nimport { Theme } from '~/providers/theme-provider'\n\nconst themeStorage = createCookieSessionStorage({\n  cookie: {\n    name: '@ilher/theme',\n    secure: true,\n    secrets: ['le_secret'],\n    sameSite: 'lax',\n    path: '/',\n    expires: new Date('2088-10-18'),\n    httpOnly: true,\n  },\n})\n\nexport const getThemeSession = async (request: Request) => {\n  const session = await themeStorage.getSession(request.headers.get('Cookie'))\n\n  return {\n    getTheme(): Theme {\n      const themeValue = session.get('theme') as Theme\n      return themeValue === 'dark' || themeValue === 'light'\n        ? themeValue\n        : 'dark'\n    },\n    setTheme(theme: Theme) {\n      session.set('theme', theme)\n    },\n    commit() {\n      return themeStorage.commitSession(session)\n    },\n  }\n}\n", "import type { ActionFunction } from 'remix'\nimport { json } from 'remix'\n\nimport { Theme } from '~/providers/theme-provider'\nimport { getThemeSession } from '~/sessions/theme.server'\n\nconst isTheme = (value: unknown): value is Theme => {\n  return typeof value === 'string' && (value === 'dark' || value === 'light')\n}\n\nexport const action: ActionFunction = async ({ request }) => {\n  const themeSession = await getThemeSession(request)\n\n  const requestText = await request.text()\n  const selectedTheme = new URLSearchParams(requestText).get(\n    'theme',\n  ) as Theme | null\n\n  if (!isTheme(selectedTheme)) {\n    return json({\n      success: false,\n      message: `${selectedTheme} is not a valid theme.`,\n    })\n  }\n\n  themeSession.setTheme(selectedTheme)\n\n  return json(\n    { success: true, message: `${selectedTheme} theme is now set!` },\n    { headers: { 'Set-Cookie': await themeSession.commit() } },\n  )\n}\n", "const Index = () => {\n  return <div>index</div>\n}\n\nexport default Index\n"],
  "mappings": "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",
  "names": []
}
